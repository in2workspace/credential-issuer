package es.in2.issuer.api.model.dto;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

class CredentialIssuerMetadataTest {

    @Test
    void testConstructorAndGetters() {
        // Arrange
        String expectedCredentialIssuer = "sampleIssuer";
        String expectedCredentialEndpoint = "https://example.com/credential";
        String expectedCredentialToken = "sampleToken";

        // Act
        CredentialIssuerMetadata metadata = new CredentialIssuerMetadata(
                expectedCredentialIssuer,
                expectedCredentialEndpoint,
                expectedCredentialToken,
                null
        );

        // Assert
        assertEquals(expectedCredentialIssuer, metadata.getCredentialIssuer());
        assertEquals(expectedCredentialEndpoint, metadata.getCredentialEndpoint());
        assertEquals(expectedCredentialToken, metadata.getCredentialToken());
        assertNull(metadata.getCredentialsSupported());
    }

    @Test
    void lombokGeneratedMethodsTest() {
        // Arrange
        String expectedCredentialIssuer = "sampleIssuer";
        String expectedCredentialEndpoint = "https://example.com/credential";
        String expectedCredentialToken = "sampleToken";

        // Act
        CredentialIssuerMetadata metadata1 = new CredentialIssuerMetadata(
                expectedCredentialIssuer,
                expectedCredentialEndpoint,
                expectedCredentialToken,
                null
        );
        CredentialIssuerMetadata metadata2 = new CredentialIssuerMetadata(
                expectedCredentialIssuer,
                expectedCredentialEndpoint,
                expectedCredentialToken,
                null
        );

        // Assert
        assertEquals(metadata1, metadata2); // Tests equals() method generated by Lombok
        assertEquals(metadata1.hashCode(), metadata2.hashCode()); // Tests hashCode() method generated by Lombok
        assertEquals("CredentialIssuerMetadata(credentialIssuer=" + expectedCredentialIssuer +
                ", credentialEndpoint=" + expectedCredentialEndpoint +
                ", credentialToken=" + expectedCredentialToken +
                ", credentialsSupported=" + null + ")", metadata1.toString()); // Tests toString() method generated by Lombok
    }

}
