package es.in2.issuer.api.model.dto;

import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;

public class CredentialsSupportedParameterTest {

    @Test
    public void testConstructorAndGetters() {
        // Arrange
        String expectedFormat = "sampleFormat";
        String expectedId = "sampleId";
        List<String> expectedTypes = Arrays.asList("type1", "type2");
        List<String> expectedCryptographicBindingMethods = Arrays.asList("method1", "method2");
        List<String> expectedCryptographicSuites = Arrays.asList("suite1", "suite2");

        // Act
        CredentialsSupportedParameter parameter = new CredentialsSupportedParameter(
                expectedFormat,
                expectedId,
                expectedTypes,
                expectedCryptographicBindingMethods,
                expectedCryptographicSuites,
                null
        );

        // Assert
        assertEquals(expectedFormat, parameter.getFormat());
        assertEquals(expectedId, parameter.getId());
        assertEquals(expectedTypes, parameter.getTypes());
        assertEquals(expectedCryptographicBindingMethods, parameter.getCryptographicBindingMethodsSupported());
        assertEquals(expectedCryptographicSuites, parameter.getCryptographicSuitesSupported());
        assertNull(parameter.getCredentialSubject());
    }

    @Test
    public void lombokGeneratedMethodsTest() {
        // Arrange
        String expectedFormat = "sampleFormat";
        String expectedId = "sampleId";
        List<String> expectedTypes = Arrays.asList("type1", "type2");
        List<String> expectedCryptographicBindingMethods = Arrays.asList("method1", "method2");
        List<String> expectedCryptographicSuites = Arrays.asList("suite1", "suite2");

        // Act
        CredentialsSupportedParameter parameter1 = new CredentialsSupportedParameter(
                expectedFormat,
                expectedId,
                expectedTypes,
                expectedCryptographicBindingMethods,
                expectedCryptographicSuites,
                null
        );
        CredentialsSupportedParameter parameter2 = new CredentialsSupportedParameter(
                expectedFormat,
                expectedId,
                expectedTypes,
                expectedCryptographicBindingMethods,
                expectedCryptographicSuites,
                null
        );

        // Assert
        assertEquals(parameter1, parameter2); // Tests equals() method generated by Lombok
        assertEquals(parameter1.hashCode(), parameter2.hashCode()); // Tests hashCode() method generated by Lombok
        assertEquals("CredentialsSupportedParameter(format=" + expectedFormat +
                ", id=" + expectedId +
                ", types=" + expectedTypes +
                ", cryptographicBindingMethodsSupported=" + expectedCryptographicBindingMethods +
                ", cryptographicSuitesSupported=" + expectedCryptographicSuites +
                ", credentialSubject=" + null + ")", parameter1.toString()); // Tests toString() method generated by Lombok
    }

}
